{% extends "layout.base.twig" %}

{% block content %}

    <h1 id="track"></h1>

	<div id="player"></div>

	<p>&nbsp;</p>

	<p>
		<i class="icon-play"></i> <strong>Direct link</strong>: <a href="https://stream.fosdem.org/{{ room }}.m3u8">https://stream.fosdem.org/{{ room }}.m3u8</a> <br />
		<i class="icon-calendar"></i> <strong>Schedule</strong>: <a href="https://fosdem.org/schedule/room/{{ room_slug }}">https://fosdem.org/schedule/room/{{ room_slug }}</a> <br />
	    <i class="icon-facetime-video"></i> <strong>Video with chat</strong>: <a href="https://chat.fosdem.org/#/room/#{{ chat_name }}:fosdem.org">{{ room_name }}</a> <br />
	    <i class="icon-comment"></i> <strong>Chat</strong>: <a href="https://matrix.to/#/#{{ chat_name }}:fosdem.org?web-instance[element.io]=chat.fosdem.org">Join the conversation!</a> <br />
	</p>

	<script type="text/javascript" src="/asset/clappr/clappr.min.js"></script>
	<script type="text/javascript" src="/asset/clappr/level-selector.min.js"></script>
	<script>
		var player = new Clappr.Player({
			source: "https://stream.fosdem.org/{{ room }}.m3u8",
			poster: "https://stream.fosdem.org/{{ room }}-preview.jpg",
			plugins: [LevelSelector],
			baseUrl: "/asset/clappr",
			parentId: "#player",
			autoPlay: true,

			levelSelectorConfig: {
				labelCallback: function(stream, label) {
					return stream.level.height + 'p';
				}
			},

			hlsjsConfig: {
				xhrSetup: function(xhr, url) {
					xhr.onerror = function() {
						player.stop();
						setTimeout(function(){
							player.play();
						}, 5000);
					}
				}
			}


		});

		player.on(Clappr.Events.PLAYER_ERROR, function() {
			console.log('retry');
			//player.load("https://stream.fosdem.org/{{ room }}.m3u8");
		});

		player.on(Clappr.Events.PLAYBACK_ERROR, function() {
			console.log('retry');
			//player.load("https://stream.fosdem.org/{{ room }}.m3u8");
		});
	</script>
{% endblock %}
